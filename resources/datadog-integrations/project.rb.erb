name 'dd-check-<%= name %>'
maintainer 'Datadog Packages <package@datadoghq.com>'
homepage 'http://www.datadoghq.com'
install_dir '/opt/datadog-agent'

build_version '<%= version %>'
build_iteration <%= build_iteration %>
json_manifest_path "#{install_dir}/3rd-party/<%= name %>/version-manifest.json"

description '<%= name %> Integration for Datadog Monitoring Agent
 The Datadog Monitoring Agent is a lightweight process that monitors system
 processes and services, and sends information back to your Datadog account.
 .
 This package relies on the Datadog agent to be installed, and installs the required files
 for the <%= name %> integration to be configured.
 .
 See http://www.datadoghq.com/ for more information
'

# ------------------------------------
# Generic package information
# ------------------------------------

# .deb specific flags
package :deb do
  vendor 'Datadog <info@datadoghq.com>'
  license 'Simplified BSD License'
  section 'utils'
  priority 'extra'
end

# .rpm specific flags
package :rpm do
  vendor 'Datadog <package@datadoghq.com>'
  license 'Simplified BSD License'
  category 'System Environment/Daemons'
  priority 'extra'
  if ENV.has_key?('RPM_SIGNING_PASSPHRASE') and not ENV['RPM_SIGNING_PASSPHRASE'].empty?
    signing_passphrase "#{ENV['RPM_SIGNING_PASSPHRASE']}"
  end
end

dependency 'preparation'  # creates required build directories
dependency 'dd-check-<%= name %>-software'

# Checks should require the datadog agent
runtime_dependency 'datadog-agent'

extends_packages('datadog-agent', 'datadog')

if linux?
  conf_directory = "/etc/dd-agent/conf.d"
elsif osx?
  conf_directory = "#{install_dir}/etc"
elsif windows?
  conf_directory = "../../extra_package_files/EXAMPLECONFSLOCATION"
end

if File.exists? "#{project_dir}/<%= name %>/conf.yaml.example"
  extra_package_file '#{conf_directory}/<%= name %>.yaml.example'
end

# If it is a default, we need to move it as a default
if File.exists? "#{project_dir}/<%= name %>/conf.yaml.default"
  extra_package_file '#{conf_directory}/<%= name %>.yaml.default'
end

exclude '\.git*'
